swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Alunos e Uploader Rest Swagger
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /alunos:
    get:
      operationId: alunos.read_all
      tags:
        - Alunos
      summary: Read the entire list of alunos
      description: Read the list of Alunos
      parameters:
        - name: length
          in: query
          type: integer
          description: Number of Alunos to get from Alunos
          required: false
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list where to start gathering Alunos
          required: false
      responses:
        200:
          description: Successfully read Alunos list operation
          schema:
            type: array
            items:
              properties:
                fname:
                  type: string
                lname:
                  type: string
                timestamp:
                  type: string

    post:
      operationId: alunos.create
      tags:
        - Alunos
      summary: Create a person and add it to the Alunos list
      description: Create a new person in the Alunos list
      parameters:
        - name: person
          in: body
          description: Person to create
          required: True
          schema:
            type: object
            properties:
              fname:
                type: string
                description: First name of person to create
              lname:
                type: string
                description: Last name of person to create
      responses:
        201:
          description: Successfully created person in list

  /alunos/{lname}:
    get:
      operationId: alunos.read_one
      tags:
        - Alunos
      summary: Read one person from the Alunos list
      description: Read one person from the Alunos list
      parameters:
        - name: lname
          in: path
          description: Last name of the person to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read person from Alunos list operation
          schema:
            properties:
              fname:
                type: string
              lname:
                type: string
              timestamp:
                type: string

    put:
      operationId: alunos.update
      tags:
        - Alunos
      summary: Update a person in the Alunos list
      description: Update a person in the Alunos list
      parameters:
        - name: lname
          in: path
          description: Last name of the person to update in the list
          type: string
          required: True
        - name: person
          in: body
          schema:
            type: object
            properties:
              fname:
                type: string
              lname:
                type: string
      responses:
        200:
          description: Successfully updated person in Alunos list

    delete:
      operationId: alunos.delete
      tags:
        - Alunos
      summary: Delete a person from the Alunos list
      description: Delete a person
      parameters:
        - name: lname
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully deleted a person from Alunos list

  /uploader:
    get:
      operationId: uploader.read_all
      tags:
        - Uploader
      summary: Read the entire list of Arquivos
      description: Read the list of Arquivos
      parameters:
        - name: length
          in: query
          type: integer
          description: Number of Arquivos to get from Arquivos
          required: false
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list where to start gathering Arquivos
          required: false
      responses:
        200:
          description: Successfully read Arquivos list operation
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                timestamp:
                  type: string

    post:
      operationId: uploader.create
      tags:
        - Uploader
      summary: Create and add it to the Arquivos list
      description: Create a new file in the Arquivos list
      parameters:
        - name: person
          in: body
          description: Arquivos to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of Arquivo to create
              file:
                type: string
                description: File to be uploaded
      responses:
        201:
          description: Successfully created Arquivo in list

  /uploader/{name}:
    get:
      operationId: uploader.read_one
      tags:
        - Uploader
      summary: Read one from the Arquivos list
      description: Read one from the Arquivos list
      parameters:
        - name: name
          in: path
          description: Name of the Arquivo to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read from Arquivos list operation
          schema:
            properties:
              name:
                type: string
              timestamp:
                type: string

    delete:
      operationId: uploader.delete
      tags:
        - Uploader
      summary: Delete from the Arquivos list
      description: Delete Arquivo
      parameters:
        - name: name
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully deleted from Arquivos list
